<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>JavaSE知识点总结</title>
      <link href="/2022/112521774.html"/>
      <url>/2022/112521774.html</url>
      
        <content type="html"><![CDATA[<h2 id="JavaSE知识点总结"><a href="#JavaSE知识点总结" class="headerlink" title="JavaSE知识点总结"></a>JavaSE知识点总结</h2><h3 id="一、Java语言概述"><a href="#一、Java语言概述" class="headerlink" title="一、Java语言概述"></a>一、Java语言概述</h3><p>IDEA常用快捷键</p><table><thead><tr><th>快捷键</th><th>功能</th></tr></thead><tbody><tr><td>Alt+Enter</td><td>导入包，自动修正代码</td></tr><tr><td>Ctrl+Y</td><td>删除光标所在行</td></tr><tr><td>Ctrl+D</td><td>复制光标行所在内容，插入光标下面位置</td></tr><tr><td>Ctrl+Alt+L</td><td>格式化代码</td></tr><tr><td>Ctrl+/</td><td>单行注释，按两次取消注释</td></tr><tr><td>Ctrl+Shift+/</td><td>选中代码注释，多行注释，按两次取消注释</td></tr><tr><td>Alt+Ins</td><td>自动生成代码，toString，get，set等方法</td></tr><tr><td>Alt+Shift+上下箭头</td><td>移动当前行代码</td></tr></tbody></table><h3 id="二、程序设计基础"><a href="#二、程序设计基础" class="headerlink" title="二、程序设计基础"></a>二、程序设计基础</h3><h4 id="1、标识符"><a href="#1、标识符" class="headerlink" title="1、标识符"></a>1、标识符</h4><h4 id="2、关键字"><a href="#2、关键字" class="headerlink" title="2、关键字"></a>2、关键字</h4><h6 id="······1-static关键字："><a href="#······1-static关键字：" class="headerlink" title="······1.static关键字："></a>······1.static关键字：</h6><p>​1.1、static存在的意义：</p><p>​static的主要意义是在于创建独立于具体对象的域变量或者方法。以致于即使没有创建对象，也能使用属性和调用方法！</p><p>​static关键字还有一个比较关键的作用就是 用来形成静态代码块以优化程序性能。static块可以置于类中的任何地方，类中可以有多个static块。在类初次被加载的时候，会按照static块的顺序来执行每个static块，并且只会执行一次。</p><p>​为什么说static块可以用来优化程序性能，是因为它的特性:只会在类加载的时候执行一次。因此，很多时候会将一些只需要进行一次的初始化操作都放在static代码块中进行。</p><h4 id="3、常量，变量，作用域"><a href="#3、常量，变量，作用域" class="headerlink" title="3、常量，变量，作用域"></a>3、常量，变量，作用域</h4><h4 id="4、数据类型"><a href="#4、数据类型" class="headerlink" title="4、数据类型"></a>4、数据类型</h4><h4 id="5、运算符与表达式"><a href="#5、运算符与表达式" class="headerlink" title="5、运算符与表达式"></a>5、运算符与表达式</h4><h4 id="6、流程控制结构"><a href="#6、流程控制结构" class="headerlink" title="6、流程控制结构"></a>6、流程控制结构</h4><h4 id="7、方法初识"><a href="#7、方法初识" class="headerlink" title="7、方法初识"></a>7、方法初识</h4><h3 id="三、面向对象"><a href="#三、面向对象" class="headerlink" title="三、面向对象"></a>三、面向对象</h3><h5 id="1-面向对象三大特征："><a href="#1-面向对象三大特征：" class="headerlink" title="1.面向对象三大特征："></a>1.面向对象三大特征：</h5><p>​继承，多态，封装。</p><h5 id="（1）继承"><a href="#（1）继承" class="headerlink" title="（1）继承"></a>（1）继承</h5><ol><li><p>继承的概念：</p><p>继承就是子类继承父类的特征和行为，使得子类对象（实例）具有父类的实例域和方法，或子类从父类继承方法，使得子类具有父类相同的行为。</p></li><li><p>类的继承格式：通过extend关键字可以申明一个类是从另一个类继承过来的</p></li><li><p>需要注意的是 Java 不支持多继承，但支持多重继承。</p><p><img src="C:\Users\Bumble\Desktop\1.png" alt="1"></p></li><li><p>继承的特性：</p><ul><li>子类拥有父类非 private 的属性、方法。</li><li>子类可以拥有自己的属性和方法，即子类可以对父类进行扩展。</li><li>子类可以用自己的方式实现父类的方法。</li></ul></li><li><p>继承关键字：</p><ol><li><p>extends：只能继承一个类</p><p>示例代码如下：</p><pre class=" language-Java"><code class="language-Java">public class Animal {     private String name;       private int id;     public Animal(String myName, String myid) {         //初始化属性值    }     public void eat() {  //吃东西方法的具体实现  }     public void sleep() { //睡觉方法的具体实现  } }  public class Penguin  extends  Animal{ }</code></pre></li><li><p>implements：可以同时继承多个类</p><p>示例代码如下：</p><pre class=" language-Java"><code class="language-Java">public interface A {    public void eat();    public void sleep();} public interface B {    public void show();} public class C implements A,B {}</code></pre></li><li><p>super：我们可以通过super关键字来实现对父类成员的访问，用来引用当前对象的父类。</p></li><li><p>this：指向自己的引用</p><pre class=" language-Java"><code class="language-Java">class Animal {  void eat() {    System.out.println("animal : eat");  }} class Dog extends Animal {  void eat() {    System.out.println("dog : eat");  }  void eatTest() {    this.eat();   // this 调用自己的方法    super.eat();  // super 调用父类方法  }} public class Test {  public static void main(String[] args) {    Animal a = new Animal();    a.eat();    Dog d = new Dog();    d.eatTest();  }}</code></pre></li></ol></li></ol><h5 id="（2）多态"><a href="#（2）多态" class="headerlink" title="（2）多态"></a>（2）多态</h5><p>多态存在的三个必要条件：</p><ol><li><p>继承l</p></li><li><p>重写</p></li><li><p>父类引用指向子类对象</p><pre class=" language-java"><code class="language-java">parent p <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">child</span><span class="token punctuation">(</span><span class="token punctuation">)</span></code></pre></li></ol><p>多态的优点：</p><ul><li><ol><li>消除类型之间的耦合关系</li></ol></li><li><ol start="2"><li>可替换性</li></ol></li><li><ol start="3"><li>可扩充性</li></ol></li><li><ol start="4"><li>接口性</li></ol></li><li><ol start="5"><li>灵活性</li></ol></li><li><ol start="6"><li>简化性</li></ol></li></ul><h5 id="（3）封装"><a href="#（3）封装" class="headerlink" title="（3）封装"></a>（3）封装</h5><p>封装的优点：</p><ul><li><ol><li>良好的封装能够减少耦合。</li></ol></li><li><ol start="2"><li>类内部的结构可以自由修改。</li></ol></li><li><ol start="3"><li>可以对成员变量进行更精确的控制。</li></ol></li><li><ol start="4"><li>隐藏信息，实现细节。</li></ol></li></ul><h5 id="2-类和对象"><a href="#2-类和对象" class="headerlink" title="2.类和对象"></a>2.类和对象</h5><p>什么是类：</p><p>​• 类：是一组相关<strong>属性</strong>和<strong>行为</strong>的集合</p><p>​• 属性：是事务的信息状态</p><p>​• 行为：是事务能够做什么</p><p> 什么是对象：</p><p>​• 对象：是类的一个实例，必然具备该类事物的属性和行为</p><h5 id="3-接口"><a href="#3-接口" class="headerlink" title="3.接口"></a>3.接口</h5>]]></content>
      
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>为使用matery主题的Hexo增加Valine评论系统</title>
      <link href="/2022/1122129.html"/>
      <url>/2022/1122129.html</url>
      
        <content type="html"><![CDATA[<h2 id="为使用matery主题的Hexo增加Valine评论系统"><a href="#为使用matery主题的Hexo增加Valine评论系统" class="headerlink" title="为使用matery主题的Hexo增加Valine评论系统"></a>为使用matery主题的Hexo增加Valine评论系统</h2><h3 id="1、序言"><a href="#1、序言" class="headerlink" title="1、序言"></a>1、序言</h3><p>上篇博客讲述了如何对hexo+<a href="https://so.csdn.net/so/search?q=GitHub&amp;spm=1001.2101.3001.7020">GitHub</a>的博客系统进行一些配置，由于配置评论系统较为复杂，故单独写本篇博客来记录如何为使用matery主题的hexo博客系统增加评论系统</p><h3 id="2、环境准备"><a href="#2、环境准备" class="headerlink" title="2、环境准备"></a>2、环境准备</h3><p>由于本站博客系统使用的是<a href="https://console.leancloud.cn/">LeanCloud</a>提供的，因此先打开官网进行<a href="https://leancloud.cn/dashboard/login.html#/signup">注册</a>。</p><p>注册完成后直接选择创建应用，应用名称随便填，方案选择开发版，点击创建即可。</p><p><img src="/./images/%E5%A2%9E%E5%8A%A0%E8%AF%84%E8%AE%BA.png"></p><p>注册完成之后我们需要用到AppID和AppKey。</p><p>AppID：87PeWo5WK3a6zYXS8wsgJIrZ-gzGzoHsz</p><p>AppKey：b7YpfAvFY5TZqvNLrkQQ8PLu</p><h3 id="3、配置评论内容"><a href="#3、配置评论内容" class="headerlink" title="3、配置评论内容"></a>3、配置评论内容</h3><p>在matery主题的配置文件<code>_config.yml</code>中，创建Valine属性：</p><pre class=" language-yml"><code class="language-yml"># Valine 评论模块的配置，默认为不激活，如要使用，就请激活该配置项，并设置 appId 和 appKey.valine:  enable: true   appId: 你的AppID  appKey: 你的AppKey  pageSize: 10                # 每页显示条数  avatar: monsterid           # 默认头像  lang: zh-CN   placeholder: 昵称填写qq可以显示qq头像和昵称哦~   # 提示信息  guest_info: nick,mail,link   recordIP: true   serverURLs: ''   background: /medias/comment_bg.png               # 背景图片  count: true </code></pre><h3 id="4、更换Valine的版本"><a href="#4、更换Valine的版本" class="headerlink" title="4、更换Valine的版本"></a>4、更换Valine的版本</h3><p>在matery配置页面，找到libs.js.valine，将其设置为 <strong>valine: <a href="https://unpkg.com/valine/dist/Valine.min.js">https://unpkg.com/valine/dist/Valine.min.js</a></strong></p><p><img src="/./images/%E5%A2%9E%E5%8A%A0%E8%AF%84%E8%AE%BA2.png"></p><h3 id="5、更换表情"><a href="#5、更换表情" class="headerlink" title="5、更换表情"></a>5、更换表情</h3><p>打开<code>themes\matery\layout\_partial</code>中找到<code>valine.ejs</code>，找到其中的<code>new Valine</code>，大概在249行，修改为以下内容：</p><pre class=" language-js"><code class="language-js"><span class="token keyword">new</span> <span class="token class-name">Valine</span><span class="token punctuation">(</span><span class="token punctuation">{</span>        el<span class="token punctuation">:</span> <span class="token string">'#vcomments'</span><span class="token punctuation">,</span>        appId<span class="token punctuation">:</span> <span class="token string">'&lt;%- theme.valine.appId %>'</span><span class="token punctuation">,</span>        appKey<span class="token punctuation">:</span> <span class="token string">'&lt;%- theme.valine.appKey %>'</span><span class="token punctuation">,</span>        notify<span class="token punctuation">:</span> <span class="token string">'&lt;%- theme.valine.notify %>'</span> <span class="token operator">===</span> <span class="token string">'true'</span><span class="token punctuation">,</span>        verify<span class="token punctuation">:</span> <span class="token string">'&lt;%- theme.valine.verify %>'</span> <span class="token operator">===</span> <span class="token string">'true'</span><span class="token punctuation">,</span>        visitor<span class="token punctuation">:</span> <span class="token string">'&lt;%- theme.valine.visitor %>'</span> <span class="token operator">===</span> <span class="token string">'true'</span><span class="token punctuation">,</span>        avatar<span class="token punctuation">:</span> <span class="token string">'&lt;%- theme.valine.avatar %>'</span><span class="token punctuation">,</span>        pageSize<span class="token punctuation">:</span> <span class="token string">'&lt;%- theme.valine.pageSize %>'</span><span class="token punctuation">,</span>        lang<span class="token punctuation">:</span> <span class="token string">'&lt;% if (config.language == "zh-CN") {  %>zh-cn&lt;% } else { %>en&lt;% } %>'</span><span class="token punctuation">,</span>        placeholder<span class="token punctuation">:</span> <span class="token string">'&lt;%= theme.valine.placeholder %>'</span><span class="token punctuation">,</span>        enableQQ<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        emojiCDN<span class="token punctuation">:</span> <span class="token string">'//i0.hdslb.com/bfs/emote/'</span><span class="token punctuation">,</span>         <span class="token comment" spellcheck="true">// 表情title和图片映射</span>        emojiMaps<span class="token punctuation">:</span> <span class="token punctuation">{</span>        <span class="token string">"tv_doge"</span><span class="token punctuation">:</span> <span class="token string">"6ea59c827c414b4a2955fe79e0f6fd3dcd515e24.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_亲亲"</span><span class="token punctuation">:</span> <span class="token string">"a8111ad55953ef5e3be3327ef94eb4a39d535d06.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_偷笑"</span><span class="token punctuation">:</span> <span class="token string">"bb690d4107620f1c15cff29509db529a73aee261.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_再见"</span><span class="token punctuation">:</span> <span class="token string">"180129b8ea851044ce71caf55cc8ce44bd4a4fc8.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_冷漠"</span><span class="token punctuation">:</span> <span class="token string">"b9cbc755c2b3ee43be07ca13de84e5b699a3f101.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_发怒"</span><span class="token punctuation">:</span> <span class="token string">"34ba3cd204d5b05fec70ce08fa9fa0dd612409ff.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_发财"</span><span class="token punctuation">:</span> <span class="token string">"34db290afd2963723c6eb3c4560667db7253a21a.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_可爱"</span><span class="token punctuation">:</span> <span class="token string">"9e55fd9b500ac4b96613539f1ce2f9499e314ed9.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_吐血"</span><span class="token punctuation">:</span> <span class="token string">"09dd16a7aa59b77baa1155d47484409624470c77.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_呆"</span><span class="token punctuation">:</span> <span class="token string">"fe1179ebaa191569b0d31cecafe7a2cd1c951c9d.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_呕吐"</span><span class="token punctuation">:</span> <span class="token string">"9f996894a39e282ccf5e66856af49483f81870f3.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_困"</span><span class="token punctuation">:</span> <span class="token string">"241ee304e44c0af029adceb294399391e4737ef2.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_坏笑"</span><span class="token punctuation">:</span> <span class="token string">"1f0b87f731a671079842116e0991c91c2c88645a.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_大佬"</span><span class="token punctuation">:</span> <span class="token string">"093c1e2c490161aca397afc45573c877cdead616.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_大哭"</span><span class="token punctuation">:</span> <span class="token string">"23269aeb35f99daee28dda129676f6e9ea87934f.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_委屈"</span><span class="token punctuation">:</span> <span class="token string">"d04dba7b5465779e9755d2ab6f0a897b9b33bb77.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_害羞"</span><span class="token punctuation">:</span> <span class="token string">"a37683fb5642fa3ddfc7f4e5525fd13e42a2bdb1.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_尴尬"</span><span class="token punctuation">:</span> <span class="token string">"7cfa62dafc59798a3d3fb262d421eeeff166cfa4.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_微笑"</span><span class="token punctuation">:</span> <span class="token string">"70dc5c7b56f93eb61bddba11e28fb1d18fddcd4c.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_思考"</span><span class="token punctuation">:</span> <span class="token string">"90cf159733e558137ed20aa04d09964436f618a1.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_惊吓"</span><span class="token punctuation">:</span> <span class="token string">"0d15c7e2ee58e935adc6a7193ee042388adc22af.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_打脸"</span><span class="token punctuation">:</span> <span class="token string">"56ab10b624063e966bfcb76ea5dc4794d87dfd47.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_抓狂"</span><span class="token punctuation">:</span> <span class="token string">"fe31c08edad661d63762b04e17b8d5ae3c71a757.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_抠鼻"</span><span class="token punctuation">:</span> <span class="token string">"c666f55e88d471e51bbd9fab9bb308110824a6eb.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_斜眼笑"</span><span class="token punctuation">:</span> <span class="token string">"911f987aa8bc1bee12d52aafe62bc41ef4474e6c.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_无奈"</span><span class="token punctuation">:</span> <span class="token string">"ea8ed89ee9878f2fece2dda0ea8a5dbfe21b5751.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_晕"</span><span class="token punctuation">:</span> <span class="token string">"5443c22b4d07fb1907ccc610c8e6db254f2461b7.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_流汗"</span><span class="token punctuation">:</span> <span class="token string">"cead1c351ab8d79e9f369605beb90148db0fbed3.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_流泪"</span><span class="token punctuation">:</span> <span class="token string">"7e71cde7858f0cd50d74b0264aa26db612a8a167.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_流鼻血"</span><span class="token punctuation">:</span> <span class="token string">"c32d39db2737f89b904ca32700d140a9241b0767.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_点赞"</span><span class="token punctuation">:</span> <span class="token string">"f85c354995bd99e28fc76c869bfe42ba6438eff4.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_生气"</span><span class="token punctuation">:</span> <span class="token string">"26702dcafdab5e8225b43ffd23c94ac1ff932654.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_生病"</span><span class="token punctuation">:</span> <span class="token string">"8b0ec90e6b86771092a498c54f09fc94621c1900.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_疑问"</span><span class="token punctuation">:</span> <span class="token string">"0793d949b18d7be716078349c202c15ff166f314.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_白眼"</span><span class="token punctuation">:</span> <span class="token string">"c1d59f439e379ee50eef488bcb5e5378e5044ea4.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_皱眉"</span><span class="token punctuation">:</span> <span class="token string">"72ccad6679fea0d14cce648b4d818e09b8ffea2d.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_目瞪口呆"</span><span class="token punctuation">:</span> <span class="token string">"0b8cb81a68de5d5365212c99375e7ace3e7891b7.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_睡着"</span><span class="token punctuation">:</span> <span class="token string">"8b196675b53af58264f383c50ad0945048290b33.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_笑哭"</span><span class="token punctuation">:</span> <span class="token string">"1abc628f6d4f4caf9d0e7800878f4697abbc8273.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_腼腆"</span><span class="token punctuation">:</span> <span class="token string">"89712c0d4af73e67f89e35cbc518420380a7f6f4.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_色"</span><span class="token punctuation">:</span> <span class="token string">"61822c7e9aae5da76475e7892534545336b23a6f.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_调侃"</span><span class="token punctuation">:</span> <span class="token string">"4bc022533ef31544ca0d72c12c808cf4a1cce3e3.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_调皮"</span><span class="token punctuation">:</span> <span class="token string">"b9c41de8e82dd7a8515ae5e3cb63e898bf245186.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_鄙视"</span><span class="token punctuation">:</span> <span class="token string">"6e72339f346a692a495b123174b49e4e8e781303.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_闭嘴"</span><span class="token punctuation">:</span> <span class="token string">"c9e990da7f6e93975e25fd8b70e2e290aa4086ef.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_难过"</span><span class="token punctuation">:</span> <span class="token string">"87f46748d3f142ebc6586ff58860d0e2fc8263ba.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_馋"</span><span class="token punctuation">:</span> <span class="token string">"fc7e829b845c43c623c8b490ee3602b7f0e76a31.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_鬼脸"</span><span class="token punctuation">:</span> <span class="token string">"0ffbbddf8a94d124ca2f54b360bbc04feb6bbfea.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_黑人问号"</span><span class="token punctuation">:</span> <span class="token string">"45821a01f51bc867da9edbaa2e070410819a95b2.png"</span><span class="token punctuation">,</span>        <span class="token string">"tv_鼓掌"</span><span class="token punctuation">:</span> <span class="token string">"1d21793f96ef4e6f48b23e53e3b9e42da833a0f6.png"</span>        <span class="token punctuation">}</span><span class="token punctuation">,</span>        requiredFields<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'nick'</span><span class="token punctuation">,</span><span class="token string">'mail'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment" spellcheck="true">//设置必填项</span>    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span></code></pre><p><img src="/./images/%E8%AF%84%E8%AE%BA%E8%A1%A8%E6%83%85%E6%B7%BB%E5%8A%A0.png"></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BeautifulSoup4库</title>
      <link href="/2022/112233072.html"/>
      <url>/2022/112233072.html</url>
      
        <content type="html"><![CDATA[<h2 id="BeautifulSoup4库"><a href="#BeautifulSoup4库" class="headerlink" title="BeautifulSoup4库"></a><strong>BeautifulSoup4库</strong></h2><h3 id="1-数据解析工具对比"><a href="#1-数据解析工具对比" class="headerlink" title="1.数据解析工具对比"></a>1.数据解析工具对比</h3><table><thead><tr><th align="left">解析工具</th><th align="left">解析速度</th><th align="left">使用难度</th></tr></thead><tbody><tr><td align="left">BeautifulSoup4</td><td align="left">最慢</td><td align="left">最简单</td></tr><tr><td align="left">lxml</td><td align="left">快</td><td align="left">简单</td></tr><tr><td align="left">正则表达式</td><td align="left">最快</td><td align="left">最难</td></tr></tbody></table><h3 id="2-简单使用"><a href="#2-简单使用" class="headerlink" title="2.简单使用"></a>2.简单使用</h3><pre class=" language-Python"><code class="language-Python">from bs4 import BeautifulSoupfile = open("./肖申克的救赎.html", "rb")html = file.read().decode("utf-8")bs = BeautifulSoup(html, "html.parser")soup = BeautifulSoup(html, "lxml")# 1.获取所有span标签for item in soup.find_all("span"):    print(item)    # 2.获取第2个span标签for item in soup.find_all("span", limit=2)[1]:  # limit=x，其中‘x’等于几就能获取几个标签。    print(item)    # 3. 获取所有class为title的span标签for item in soup.find_all('span', class_="title"):    print(item)    # 4.获取a标签里的href属性aList = soup.find_all("a")for a in aList:    # 1.通过下表的方法搜索    href = a['href']    print(href)    # 2.通过attrs属性的方法    href2 = a.attrs['href']    print(href2)    # 5.获取纯文本spans = soup.find_all("span")for span in spans:    print(span.string)</code></pre><h3 id="3-string-和-stripped-strings"><a href="#3-string-和-stripped-strings" class="headerlink" title="3.string 和 stripped_strings"></a>3.string 和 stripped_strings</h3><p>string获取到的字符会包含有空白格，而stripped_strings获取到的字符是所有非空的字符串，代码示例如下：</p><pre class=" language-Python"><code class="language-Python">spans = soup.find_all('div', class_="hd")for span in spans:    sp = list(span.strings)    print(sp)    ['\n', '\n', '肖申克的救赎', '\n', '\xa0/\xa0The Shawshank Redemption', '\n','\xa0/\xa0月黑高飞(港)  /  刺激1995(台)', '\n', '\n', '[可播放]', '\n']        spn = list(span.stripped_strings)    print(spn)    ['肖申克的救赎', '/\xa0The Shawshank Redemption', '/\xa0月黑高飞(港)  /  刺激1995(台)', '[可播放]']</code></pre><h3 id="4-find-all的使用"><a href="#4-find-all的使用" class="headerlink" title="4.find_all的使用"></a>4.find_all的使用</h3><p>1.在提取标签时，第一个参数是标签的名字，如果在提取标签时要使用标签的属性进行过滤，那么可以在这个方法中通过关键字参数的形式，将属性的名字以及对应的值传进去</p><p>2.在提取限量的标签时，可用limit参数限制所要提取的标签个数</p><h3 id="5-find与find-all的区别"><a href="#5-find与find-all的区别" class="headerlink" title="5.find与find_all的区别"></a>5.find与find_all的区别</h3><p>1.find：只能找到第一个满足条件的标签</p><p>2.find_all：会返回所有满足条件的标签</p><h3 id="6-使用find与find-all的过渡条件"><a href="#6-使用find与find-all的过渡条件" class="headerlink" title="6.使用find与find_all的过渡条件"></a>6.使用find与find_all的过渡条件</h3><p>1.关键字参数，将属性的名字作为关键字参数的名字，以及属性的值作为关键字参数值的过滤条件进行过滤</p><p>2.attrs参数，将属性条件放到一个字典中，传给attrs参数</p><h3 id="7-css选择器"><a href="#7-css选择器" class="headerlink" title="7.css选择器"></a>7.css选择器</h3><p>1.根据标签的名字选择，示例代码如下：</p><pre class=" language-css"><code class="language-css"><span class="token selector">p</span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>2.根据类名选择，要在类的前面加一个点，示例代码如下;</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token class">.line</span></span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>3.根据id名字选择，需要在id前加一个#，示例代码如下：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token id">#box</span></span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>4.查找子孙元素，需要在子孙元素前留一个空格，示例代码如下：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token id">#box</span> p</span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>5.查找直接子元素，要在父子元素中间插入一个 &gt; ，示例代码如下：</p><pre class=" language-css"><code class="language-css"><span class="token selector"><span class="token id">#box</span> > p</span><span class="token punctuation">{</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>6.根据属性名查找，应县写标签名字，然后在中括号里写属性的值，示例代码如下：</p><pre class=" language-css"><code class="language-css"><span class="token selector">input<span class="token attribute">[name='username']</span></span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p>7.在根据类名或者id进行查找的时候，如果还要根据标签名进行过滤，那么可以在类的前面或者id前面加上标签的名字，示例代码如下：</p><pre class=" language-css"><code class="language-css"><span class="token selector">div<span class="token id">#line</span></span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span><span class="token selector">div<span class="token class">.line</span></span><span class="token punctuation">{</span>    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span><span class="token punctuation">}</span></code></pre><p><strong>BeautifulSoup中使用css选择器</strong><br>在BeautifulSoup中使用css选择器是，需要使用<code>soup.select()</code>传递一个css选择器的字符串给select函数</p>]]></content>
      
      
      
        <tags>
            
            <tag> python网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
