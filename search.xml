<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>BeautifulSoup4库</title>
      <link href="/2022/11/22/BeautifulSoup4%E5%BA%93/"/>
      <url>/2022/11/22/BeautifulSoup4%E5%BA%93/</url>
      
        <content type="html"><![CDATA[<h2 id="BeautifulSoup4库"><a href="#BeautifulSoup4库" class="headerlink" title="BeautifulSoup4库"></a><strong>BeautifulSoup4库</strong></h2><h3 id="1-数据解析工具对比"><a href="#1-数据解析工具对比" class="headerlink" title="1.数据解析工具对比"></a>1.数据解析工具对比</h3><table><thead><tr><th align="left">解析工具</th><th align="left">解析速度</th><th align="left">使用难度</th></tr></thead><tbody><tr><td align="left">BeautifulSoup4</td><td align="left">最慢</td><td align="left">最简单</td></tr><tr><td align="left">lxml</td><td align="left">快</td><td align="left">简单</td></tr><tr><td align="left">正则表达式</td><td align="left">最快</td><td align="left">最难</td></tr></tbody></table><h3 id="2-简单使用"><a href="#2-简单使用" class="headerlink" title="2.简单使用"></a>2.简单使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"></span><br><span class="line">file = <span class="built_in">open</span>(<span class="string">&quot;./肖申克的救赎.html&quot;</span>, <span class="string">&quot;rb&quot;</span>)</span><br><span class="line">html = file.read().decode(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">bs = BeautifulSoup(html, <span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line"></span><br><span class="line">soup = BeautifulSoup(html, <span class="string">&quot;lxml&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1.获取所有span标签</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> soup.find_all(<span class="string">&quot;span&quot;</span>):</span><br><span class="line">    <span class="built_in">print</span>(item)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 2.获取第2个span标签</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> soup.find_all(<span class="string">&quot;span&quot;</span>, limit=<span class="number">2</span>)[<span class="number">1</span>]:  <span class="comment"># limit=x，其中‘x’等于几就能获取几个标签。</span></span><br><span class="line">    <span class="built_in">print</span>(item)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 3. 获取所有class为title的span标签</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> soup.find_all(<span class="string">&#x27;span&#x27;</span>, class_=<span class="string">&quot;title&quot;</span>):</span><br><span class="line">    <span class="built_in">print</span>(item)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 4.获取a标签里的href属性</span></span><br><span class="line">aList = soup.find_all(<span class="string">&quot;a&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> a <span class="keyword">in</span> aList:</span><br><span class="line">    <span class="comment"># 1.通过下表的方法搜索</span></span><br><span class="line">    href = a[<span class="string">&#x27;href&#x27;</span>]</span><br><span class="line">    <span class="built_in">print</span>(href)</span><br><span class="line">    <span class="comment"># 2.通过attrs属性的方法</span></span><br><span class="line">    href2 = a.attrs[<span class="string">&#x27;href&#x27;</span>]</span><br><span class="line">    <span class="built_in">print</span>(href2)</span><br><span class="line">    </span><br><span class="line"><span class="comment"># 5.获取纯文本</span></span><br><span class="line">spans = soup.find_all(<span class="string">&quot;span&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> span <span class="keyword">in</span> spans:</span><br><span class="line">    <span class="built_in">print</span>(span.string)</span><br></pre></td></tr></table></figure><h3 id="3-string-和-stripped-strings"><a href="#3-string-和-stripped-strings" class="headerlink" title="3.string 和 stripped_strings"></a>3.string 和 stripped_strings</h3><p>string获取到的字符会包含有空白格，而stripped_strings获取到的字符是所有非空的字符串，代码示例如下：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">spans = soup.find_all(<span class="string">&#x27;div&#x27;</span>, class_=<span class="string">&quot;hd&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> span <span class="keyword">in</span> spans:</span><br><span class="line">    sp = <span class="built_in">list</span>(span.strings)</span><br><span class="line">    <span class="built_in">print</span>(sp)</span><br><span class="line">    [<span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;肖申克的救赎&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;\xa0/\xa0The Shawshank Redemption&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\xa0/\xa0月黑高飞(港)  /  刺激1995(台)&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;[可播放]&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>]</span><br><span class="line">    </span><br><span class="line">    spn = <span class="built_in">list</span>(span.stripped_strings)</span><br><span class="line">    <span class="built_in">print</span>(spn)</span><br><span class="line">    [<span class="string">&#x27;肖申克的救赎&#x27;</span>, <span class="string">&#x27;/\xa0The Shawshank Redemption&#x27;</span>, <span class="string">&#x27;/\xa0月黑高飞(港)  /  刺激1995(台)&#x27;</span>, <span class="string">&#x27;[可播放]&#x27;</span>]</span><br></pre></td></tr></table></figure><h3 id="4-find-all的使用"><a href="#4-find-all的使用" class="headerlink" title="4.find_all的使用"></a>4.find_all的使用</h3><p>1.在提取标签时，第一个参数是标签的名字，如果在提取标签时要使用标签的属性进行过滤，那么可以在这个方法中通过关键字参数的形式，将属性的名字以及对应的值传进去</p><p>2.在提取限量的标签时，可用limit参数限制所要提取的标签个数</p><h3 id="5-find与find-all的区别"><a href="#5-find与find-all的区别" class="headerlink" title="5.find与find_all的区别"></a>5.find与find_all的区别</h3><p>1.find：只能找到第一个满足条件的标签</p><p>2.find_all：会返回所有满足条件的标签</p><h3 id="6-使用find与find-all的过渡条件"><a href="#6-使用find与find-all的过渡条件" class="headerlink" title="6.使用find与find_all的过渡条件"></a>6.使用find与find_all的过渡条件</h3><p>1.关键字参数，将属性的名字作为关键字参数的名字，以及属性的值作为关键字参数值的过滤条件进行过滤</p><p>2.attrs参数，将属性条件放到一个字典中，传给attrs参数</p><h3 id="7-css选择器"><a href="#7-css选择器" class="headerlink" title="7.css选择器"></a>7.css选择器</h3><p>1.根据标签的名字选择，示例代码如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2.根据类名选择，要在类的前面加一个点，示例代码如下;</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.line</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3.根据id名字选择，需要在id前加一个#，示例代码如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#box</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>4.查找子孙元素，需要在子孙元素前留一个空格，示例代码如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#box</span> <span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>5.查找直接子元素，要在父子元素中间插入一个 &gt; ，示例代码如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#box</span> &gt; <span class="selector-tag">p</span>&#123;</span><br><span class="line"><span class="attribute">background-color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>6.根据属性名查找，应县写标签名字，然后在中括号里写属性的值，示例代码如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">input</span><span class="selector-attr">[name=<span class="string">&#x27;username&#x27;</span>]</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>7.在根据类名或者id进行查找的时候，如果还要根据标签名进行过滤，那么可以在类的前面或者id前面加上标签的名字，示例代码如下：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-id">#line</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">div</span><span class="selector-class">.line</span>&#123;</span><br><span class="line"><span class="attribute">color</span>:red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>BeautifulSoup中使用css选择器</strong><br>在BeautifulSoup中使用css选择器是，需要使用<code>soup.select()</code>传递一个css选择器的字符串给select函数</p>]]></content>
      
      
      
        <tags>
            
            <tag> python网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
