<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>BeautifulSoup4库</title>
      <link href="/2022/112233072.html"/>
      <url>/2022/112233072.html</url>
      
        <content type="html"><![CDATA[<h2 id="BeautifulSoup4库"><a href="#BeautifulSoup4库" class="headerlink" title="BeautifulSoup4库"></a><strong>BeautifulSoup4库</strong></h2><h3 id="1-数据解析工具对比"><a href="#1-数据解析工具对比" class="headerlink" title="1.数据解析工具对比"></a>1.数据解析工具对比</h3><table><thead><tr><th align="left">解析工具</th><th align="left">解析速度</th><th align="left">使用难度</th></tr></thead><tbody><tr><td align="left">BeautifulSoup4</td><td align="left">最慢</td><td align="left">最简单</td></tr><tr><td align="left">lxml</td><td align="left">快</td><td align="left">简单</td></tr><tr><td align="left">正则表达式</td><td align="left">最快</td><td align="left">最难</td></tr></tbody></table><h3 id="2-简单使用"><a href="#2-简单使用" class="headerlink" title="2.简单使用"></a>2.简单使用</h3><pre class=" language-Python"><code class="language-Python">from bs4 import BeautifulSoupfile = open("./肖申克的救赎.html", "rb")html = file.read().decode("utf-8")bs = BeautifulSoup(html, "html.parser")soup = BeautifulSoup(html, "lxml")# 1.获取所有span标签for item in soup.find_all("span"):    print(item)    # 2.获取第2个span标签for item in soup.find_all("span", limit=2)[1]:  # limit=x，其中‘x’等于几就能获取几个标签。    print(item)    # 3. 获取所有class为title的span标签for item in soup.find_all('span', class_="title"):    print(item)    # 4.获取a标签里的href属性aList = soup.find_all("a")for a in aList:    # 1.通过下表的方法搜索    href = a['href']    print(href)    # 2.通过attrs属性的方法    href2 = a.attrs['href']    print(href2)    # 5.获取纯文本spans = soup.find_all("span")for span in spans:    print(span.string)</code></pre><h3 id="3-string-和-stripped-strings"><a href="#3-string-和-stripped-strings" class="headerlink" title="3.string 和 stripped_strings"></a>3.string 和 stripped_strings</h3><p>string获取到的字符会包含有空白格，而stripped_strings获取到的字符是所有非空的字符串，代码示例如下：</p><pre class=" language-Python"><code class="language-Python">spans = soup.find_all('div', class_="hd")for span in spans:    sp = list(span.strings)    print(sp)    ['\n', '\n', '肖申克的救赎', '\n', '\xa0/\xa0The Shawshank Redemption', '\n','\xa0/\xa0月黑高飞(港)  /  刺激1995(台)', '\n', '\n', '[可播放]', '\n']        spn = list(span.stripped_strings)    print(spn)    ['肖申克的救赎', '/\xa0The Shawshank Redemption', '/\xa0月黑高飞(港)  /  刺激1995(台)', '[可播放]']</code></pre><h3 id="4-find-all的使用"><a href="#4-find-all的使用" class="headerlink" title="4.find_all的使用"></a>4.find_all的使用</h3><p>1.在提取标签时，第一个参数是标签的名字，如果在提取标签时要使用标签的属性进行过滤，那么可以在这个方法中通过关键字参数的形式，将属性的名字以及对应的值传进去</p><p>2.在提取限量的标签时，可用limit参数限制所要提取的标签个数</p><h3 id="5-find与find-all的区别"><a href="#5-find与find-all的区别" class="headerlink" title="5.find与find_all的区别"></a>5.find与find_all的区别</h3><p>1.find：只能找到第一个满足条件的标签</p><p>2.find_all：会返回所有满足条件的标签</p><h3 id="6-使用find与find-all的过渡条件"><a href="#6-使用find与find-all的过渡条件" class="headerlink" title="6.使用find与find_all的过渡条件"></a>6.使用find与find_all的过渡条件</h3><p>1.关键字参数，将属性的名字作为关键字参数的名字，以及属性的值作为关键字参数值的过滤条件进行过滤</p><p>2.attrs参数，将属性条件放到一个字典中，传给attrs参数</p><h3 id="7-css选择器"><a href="#7-css选择器" class="headerlink" title="7.css选择器"></a>7.css选择器</h3><p>1.根据标签的名字选择，示例代码如下：</p><pre class=" language-css"><code class="language-css">p&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><p>2.根据类名选择，要在类的前面加一个点，示例代码如下;</p><pre class=" language-css"><code class="language-css"><span class="token number">.</span>line&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><p>3.根据id名字选择，需要在id前加一个#，示例代码如下：</p><pre class=" language-css"><code class="language-css">#box&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><p>4.查找子孙元素，需要在子孙元素前留一个空格，示例代码如下：</p><pre class=" language-css"><code class="language-css">#box p&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><p>5.查找直接子元素，要在父子元素中间插入一个 &gt; ，示例代码如下：</p><pre class=" language-css"><code class="language-css">#box > p&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><p>6.根据属性名查找，应县写标签名字，然后在中括号里写属性的值，示例代码如下：</p><pre class=" language-css"><code class="language-css">input[name=<span class="token string">'username'</span>]&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><p>7.在根据类名或者id进行查找的时候，如果还要根据标签名进行过滤，那么可以在类的前面或者id前面加上标签的名字，示例代码如下：</p><pre class=" language-css"><code class="language-css">div#line&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span>div<span class="token number">.</span>line&amp;<span class="token hexcode">#123</span><span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span>red<span class="token punctuation">;</span>&amp;<span class="token hexcode">#125</span><span class="token punctuation">;</span></code></pre><p><strong>BeautifulSoup中使用css选择器</strong><br>在BeautifulSoup中使用css选择器是，需要使用<code>soup.select()</code>传递一个css选择器的字符串给select函数</p>]]></content>
      
      
      
        <tags>
            
            <tag> python网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
